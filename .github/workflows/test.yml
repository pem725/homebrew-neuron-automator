name: Test Homebrew Formula

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Test weekly to catch dependency issues
    - cron: '0 10 * * 1'

jobs:
  test-formula:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, macos-14] # Intel and Apple Silicon
    
    steps:
    - name: Checkout tap
      uses: actions/checkout@v4
    
    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master
    
    - name: Cache Homebrew packages
      uses: actions/cache@v3
      with:
        path: |
          ~/Library/Caches/Homebrew
          /opt/homebrew/var/homebrew/locks
        key: ${{ runner.os }}-brew-${{ hashFiles('Formula/neuron-automator.rb') }}
        restore-keys: |
          ${{ runner.os }}-brew-
    
    - name: Install dependencies
      run: |
        # Install Chrome for testing (allow failure for CI)
        brew install --cask google-chrome || echo "Chrome install failed (CI limitation)"
        
        # Ensure Python is available
        brew install python@3.11
    
    - name: Test formula installation
      run: |
        # Add the local tap first
        brew tap pem725/neuron-automator $PWD
        
        # Install from tap using proper syntax
        brew install --build-from-source --verbose pem725/neuron-automator/neuron-automator
    
    - name: Test basic functionality
      run: |
        # Test that executables exist
        which neuron-automation
        which blacklist-rewind
        
        # Test help (less likely to fail than version)
        neuron-automation --help || echo "Help command failed (expected in CI)"
        blacklist-rewind --help || echo "Blacklist rewind help failed (expected in CI)"
        
        # Test configuration creation
        ls -la ~/.config/neuron-automation/ || echo "Config directory not created"
        
        # Check launchd service was created
        ls -la ~/Library/LaunchAgents/com.neuron.automation.plist || echo "LaunchAgent not created"
    
    - name: Test formula audit
      run: |
        brew audit --strict --online pem725/neuron-automator/neuron-automator
    
    - name: Test formula style
      run: |
        brew style pem725/neuron-automator/neuron-automator
    
    - name: Test uninstallation
      run: |
        brew uninstall pem725/neuron-automator/neuron-automator
        
        # Verify cleanup (but config should remain)
        [ ! -f "$(brew --prefix)/bin/neuron-automation" ]
        [ -d ~/.config/neuron-automation ] # Config should remain

  test-upgrade:
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout tap
      uses: actions/checkout@v4
      with:
        fetch-depth: 2 # Need previous commit for comparison
    
    - name: Set up Homebrew
      uses: Homebrew/actions/setup-homebrew@master
    
    - name: Test upgrade scenario
      run: |
        # For now, skip upgrade testing since we need published releases
        # TODO: Implement upgrade testing once we have multiple releases
        echo "Upgrade testing skipped - requires multiple published releases"
        echo "This will be implemented in future workflow updates"

  validate-version:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout tap
      uses: actions/checkout@v4
    
    - name: Validate version consistency
      run: |
        # Extract version from formula
        FORMULA_VERSION=$(grep 'url.*v[0-9]' Formula/neuron-automator.rb | sed 's/.*v\([0-9.]*\).*/\1/')
        echo "Formula version: $FORMULA_VERSION"
        
        # TODO: When you have releases, add version validation against GitHub releases
        # For now, just ensure version format is correct
        if [[ ! $FORMULA_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Invalid version format: $FORMULA_VERSION"
          exit 1
        fi